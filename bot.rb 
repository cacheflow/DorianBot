require "Twitter"
require "treat"
include Treat::Core::DSL

	## So right here we're passing our twitter 
	## credentials as a block and saving it in 
	## client variable 
	client = Twitter::REST::Client.new do |config|
		config.consumer_key = ENV["TWITTER_KEY"]
		config.consumer_secret = ENV["TWITTER_SECRET"]
		config.access_token = ENV["TWITTER_TOKEN"]
		config.access_token_secret = ENV["TWITTER_TOKEN_SECRET"]
	end 

	story = document("example.txt")
	##Right here we're storing the book in a document object, 
	##so it can be parsed
		story.apply(:chunk, :segment, :tokenize)
	##Now that we have the story object we parse through it and 
	##segmenting it into titles, paragraphs, and sentences. 
		tweetables = Array(story.sentences.sample.to_s)
	##Right here we're taking the story.sentences object
	## and coverting that into a random string and storing 
	##that in an array again so it will be held together. 
		tweetables.each do |sen| 
	## Now we loop through the array of random 
	## sentences 
			unless sen.length >= 140
		##if the sentences are less than 140
		## loop through the twitter timeline of 
		## tweets and see if matches an old tweet.
				client.home_timeline.each do |past_tweets| 
					if past_tweets != sen 
						puts client.update(sen) 
							break 
					end 				
				end 
			end 
		end


	 

 	
